{"version":3,"sources":["Images/Logo_Jour.png","Images/Robotic-Vector.jpg","Images/AI.jpg","Images/Embedded.jpg","Images/Web-Dev.jpg","Components/Nav.jsx","Components/Tile.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["module","exports","CustomNav","Navbar","bg","variant","expand","Brand","href","src","Logo","width","height","className","alt","Toggle","aria-controls","Collapse","id","Nav","Link","Component","Tile","this","props","invert","Fragment","style","backgroundImage","image","backgroundColor","title","bulletList","App","rel","integrity","crossOrigin","Container","fluid","Row","borderBottom","Col","lg","span","offset","md","borderTop","s","xs","padding","ImageRobot","ImageEmbedded","ImageAI","ImageWeb","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.06fb3041.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Logo_Jour.74752ed2.png\";","module.exports = __webpack_public_path__ + \"static/media/Robotic-Vector.7fa187c7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/AI.d6bfc188.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Embedded.b10fe1c5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Web-Dev.122e627a.jpg\";","import React, { Component } from 'react'\r\nimport { Nav, Navbar } from 'react-bootstrap';\r\n\r\nimport Logo from '../Images/Logo_Jour.png'\r\n\r\nimport './Nav.css'\r\n\r\nclass CustomNav extends Component {\r\n  render() {\r\n    return (\r\n      <Navbar bg=\"dark\" variant=\"dark\" expand=\"md\">\r\n        <Navbar.Brand href=\"#home\">\r\n          <img\r\n            src={Logo}\r\n            width=\"20\"\r\n            height=\"40\"\r\n            className=\"d-inline-block align-center\"\r\n            alt=\"Logo\"\r\n          />{' '}\r\n          Mathieu Célérier\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"mr-auto\">\r\n            <Nav.Link href=\"#Robotics\">Robotics</Nav.Link>\r\n            <Nav.Link href=\"#AI\">AI</Nav.Link>\r\n            <Nav.Link href=\"#Embedded\">Embedded</Nav.Link>\r\n            <Nav.Link href=\"#Web\">Web</Nav.Link>\r\n            <Nav.Link href=\"#Projects\">Projects</Nav.Link>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CustomNav","import React, { Component } from 'react'\r\n\r\nimport './Tile.css'\r\n\r\nclass Tile extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"Tile\">\r\n                {\r\n                    this.props.invert ?\r\n                    <React.Fragment>\r\n                    <div className=\"tile-square\" style={{backgroundImage: `url(${this.props.image})`}}>\r\n                    </div>\r\n                    <div className=\"tile-square\" style={{backgroundColor: '#F3F7FA'}}>\r\n                        <h3>\r\n                            {this.props.title}\r\n                        </h3>\r\n                        {this.props.bulletList}\r\n                    </div>\r\n                    </React.Fragment> :\r\n                    <React.Fragment>\r\n                    <div className=\"tile-square\" style={{backgroundColor: '#F3F7FA'}}>\r\n                        <h3>\r\n                            {this.props.title}\r\n                        </h3>\r\n                        {this.props.bulletList}\r\n                    </div>\r\n                    <div className=\"tile-square\" style={{backgroundImage: `url(${this.props.image})`}}>\r\n                    </div>\r\n                    </React.Fragment>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Tile","import React, { Component } from 'react'\nimport './App.css'\n\nimport CustomNav from './Components/Nav'\nimport Tile from './Components/Tile'\nimport { Container, Row, Col } from 'react-bootstrap'\n\nimport ImageRobot from './Images/Robotic-Vector.jpg'\nimport ImageAI from './Images/AI.jpg'\nimport ImageEmbedded from './Images/Embedded.jpg'\nimport ImageWeb from './Images/Web-Dev.jpg'\n\nclass App extends Component {\n  render() {\n    return(\n      <div className=\"root\">\n        <link\n          rel=\"stylesheet\"\n          href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\"\n          integrity=\"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\"\n          crossOrigin=\"anonymous\"\n        />\n        <Container className=\"bgMain\" fluid>\n          {/* --- Header ---*/}\n          <Row style={{height: '5vh'}}>\n              <CustomNav />\n          </Row>\n\n          {/* --- First part -> Presentation --- */}\n          <Row style={{ height: '95vh', borderBottom: 'solid #212529 4px'}} className=\"align-items-center\">\n            <Col lg={{span: 6, offset: 3}} md={{span: 6, offset: 3}} className=\"presentationBox align-middle\">\n              <h1 className=\"title\">MATHIEU CELERIER</h1>\n              <p className=\"presentation\">Microelectronic and Automation engineering student. Self learning  software engineering, deep learning and web development. Robotics hobbyist working arround social robot and human robot interaction</p>\n            </Col>\n          </Row>\n\n          {/* --- Second part -> My work header --- */}\n          <Row className=\"my-work-header\" style={{height: '20vh', borderTop: 'solid #212529 4px'}}>\n            <Col lg={{span: 7, offset: 5}} md={{span: 7, offset: 5}} s={{span: 7, offset: 5}} xs={{span: 7, offset: 5}}>\n                <h1 className=\"my-work-header-title\">MY WORK</h1>\n                <p className=\"my-work-header-text\">Most of my projects are around robotics,embedded systems and electronics.</p>\n            </Col>\n          </Row>\n\n          {/* --- Second part -> Main domains tiles --- */}\n          <Row style={{height: '80vh', borderBottom: 'solid #212529 4px'}} className=\"tiling\">\n            <Col lg={6} md={12} s={12} style={{padding: '0px'}}>\n              <Tile title=\"Robotics\"\n                    image={ImageRobot}\n                    bulletList={\n                      <ul>\n                        <li>Human Robot Interaction (HRI) fiel of ressearch</li>\n                        <li>Social Robots</li>\n                      </ul>\n                    }\n              />\n              <Tile invert\n                    title=\"Embedded Systems\"\n                    image={ImageEmbedded}\n                    bulletList={\n                      <ul>\n                        <li>Programming for STM32, Arduino, PIC</li>\n                        <li>Low-Power programming design for critical power needs systems</li>\n                        <li>Design of electronic circuits and PCBs</li>\n                      </ul>\n                    }\n                />\n            </Col>\n            <Col lg={6} md={12} s={12} style={{padding: '0px'}}>\n              <Tile title=\"Artifial Intelligence\"\n                    image={ImageAI}\n                    bulletList={\n                      <ul>\n                        <li>Deep Learning methods applied to robotics</li>\n                        <li>Computer vision</li>\n                        <li>Social Intelligence</li>\n                      </ul>\n                    }\n              />\n              <Tile invert\n                    title=\"Web Development\"\n                    image={ImageWeb}\n                    bulletList={\n                      <ul>\n                        <li>React/ Javascript</li>\n                        <li>Node.js</li>\n                        <li>SQL/ MySQL</li>\n                      </ul>\n                    }\n                />\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    )\n  }\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.jsx`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}